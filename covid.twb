<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20194.19.1211.1636                               -->
<workbook original-version='18.1' source-build='2019.4.1 (20194.19.1211.1636)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts ignorable='true' predowngraded='true' />
    <MapboxVectorStylesAndLayers />
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='global_accumulate_vacc_by_day' inline='true' name='federated.0fs41100cfcw3l1c4c9z31o4dn9w' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='global_accumulate_vacc_by_day' name='textscan.0c4kr5c1b9omsl14ikhy901rsqij'>
            <connection class='textscan' directory='C:/Users/kano/Desktop/PortfolioPorject/Tableau' filename='global_accumulate_vacc_by_day.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0c4kr5c1b9omsl14ikhy901rsqij' name='global_accumulate_vacc_by_day.csv' table='[global_accumulate_vacc_by_day#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='datetime' name='date' ordinal='1' />
            <column datatype='integer' name='total_cases' ordinal='2' />
            <column datatype='integer' name='population' ordinal='3' />
            <column datatype='real' name='infected_rate_pct' ordinal='4' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[global_accumulate_vacc_by_day.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[global_accumulate_vacc_by_day.csv]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>135</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[global_accumulate_vacc_by_day.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>1</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[global_accumulate_vacc_by_day.csv]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[global_accumulate_vacc_by_day.csv]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>infected_rate_pct</remote-name>
            <remote-type>5</remote-type>
            <local-name>[infected_rate_pct]</local-name>
            <parent-name>[global_accumulate_vacc_by_day.csv]</parent-name>
            <remote-alias>infected_rate_pct</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Rolling Peo Vac' datatype='integer' name='[RollingPeoVac]' role='measure' type='quantitative' />
      <column caption='Continent' datatype='string' name='[continent]' role='dimension' type='nominal' />
      <column caption='Date' datatype='datetime' name='[date]' role='dimension' type='ordinal' />
      <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
      <column caption='New Vac' datatype='integer' name='[new_vac]' role='measure' type='quantitative' />
      <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.454545' measure-ordering='alphabetic' measure-percentage='0.545455' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='global_deathrate_by_day' inline='true' name='federated.1mfn69p1jze51215s7xqh1qsgnyg' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='global_deathrate_by_day' name='textscan.0xglj0505nris1128e3ta1k3k0f8'>
            <connection class='textscan' directory='C:/Users/kano/Desktop/PortfolioPorject/Tableau' filename='global_deathrate_by_day.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0xglj0505nris1128e3ta1k3k0f8' name='global_deathrate_by_day.csv' table='[global_deathrate_by_day#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='datetime' name='date' ordinal='0' />
            <column datatype='integer' name='total_cases' ordinal='1' />
            <column datatype='integer' name='total_deaths' ordinal='2' />
            <column datatype='real' name='death_rate_pct' ordinal='3' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[global_deathrate_by_day.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>135</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[global_deathrate_by_day.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>0</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[global_deathrate_by_day.csv]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[global_deathrate_by_day.csv]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>death_rate_pct</remote-name>
            <remote-type>5</remote-type>
            <local-name>[death_rate_pct]</local-name>
            <parent-name>[global_deathrate_by_day.csv]</parent-name>
            <remote-alias>death_rate_pct</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Date' datatype='datetime' name='[date]' role='dimension' type='ordinal' />
      <column caption='Death Rate Pct' datatype='real' name='[death_rate_pct]' role='measure' type='quantitative' />
      <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.430403' measure-ordering='alphabetic' measure-percentage='0.569597' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='global_max_deathcount' inline='true' name='federated.0k3u3bv0yxrrvn19i1yq70ryitv1' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='global_max_deathcount' name='textscan.0xv3qa613z5z4j1ap3ics0my3ykf'>
            <connection class='textscan' directory='C:/Users/kano/Desktop/PortfolioPorject/Tableau' filename='global_max_deathcount.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0xv3qa613z5z4j1ap3ics0my3ykf' name='global_max_deathcount.csv' table='[global_max_deathcount#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='max_Totaldeath_count' ordinal='1' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[global_max_deathcount.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[global_max_deathcount.csv]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>max_Totaldeath_count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[max_Totaldeath_count]</local-name>
            <parent-name>[global_max_deathcount.csv]</parent-name>
            <remote-alias>max_Totaldeath_count</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column aggregation='None' datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='max Totaldeath count' datatype='integer' name='[max_Totaldeath_count]' role='measure' type='quantitative' />
      <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.431818' measure-ordering='alphabetic' measure-percentage='0.568182' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Location:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Niue&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bonaire Sint Eustatius and Saba&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;North Korea&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Tokelau&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Saint Pierre and Miquelon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;United States Virgin Islands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Western Sahara&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Northern Cyprus&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pitcairn&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='global_max_caseandinfectrate' inline='true' name='federated.0mrr9ae1ksdrg21fq4izx0yoe8v3' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='global_max_caseandinfectrate' name='textscan.1q7wpsj17eyztv10rdbrt1j8hfth'>
            <connection class='textscan' directory='C:/Users/kano/Desktop/PortfolioPorject/Tableau' filename='global_max_caseandinfectrate.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1q7wpsj17eyztv10rdbrt1j8hfth' name='global_max_caseandinfectrate.csv' table='[global_max_caseandinfectrate#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='population' ordinal='1' />
            <column datatype='integer' name='max_total_case' ordinal='2' />
            <column datatype='real' name='max_infected_rate_pct' ordinal='3' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[global_max_caseandinfectrate.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[global_max_caseandinfectrate.csv]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[global_max_caseandinfectrate.csv]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>max_total_case</remote-name>
            <remote-type>20</remote-type>
            <local-name>[max_total_case]</local-name>
            <parent-name>[global_max_caseandinfectrate.csv]</parent-name>
            <remote-alias>max_total_case</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>max_infected_rate_pct</remote-name>
            <remote-type>5</remote-type>
            <local-name>[max_infected_rate_pct]</local-name>
            <parent-name>[global_max_caseandinfectrate.csv]</parent-name>
            <remote-alias>max_infected_rate_pct</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column aggregation='None' datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Max Infected Rate Pct' datatype='real' name='[max_infected_rate_pct]' role='measure' type='quantitative' />
      <column caption='Max Total Case' datatype='integer' name='[max_total_case]' role='measure' type='quantitative' />
      <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.386364' measure-ordering='alphabetic' measure-percentage='0.613636' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='continent_max_deathcount' inline='true' name='federated.0c07w181arxfub14bj2df0mgv5dr' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='continent_max_deathcount' name='textscan.1nuuiwm0zksiu71f7wkbb1rtt19t'>
            <connection class='textscan' directory='C:/Users/kano/Desktop/PortfolioPorject/Tableau' filename='continent_max_deathcount.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1nuuiwm0zksiu71f7wkbb1rtt19t' name='continent_max_deathcount.csv' table='[continent_max_deathcount#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='continent' ordinal='0' />
            <column datatype='integer' name='max_Totaldeath_count' ordinal='1' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[continent_max_deathcount.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>continent</remote-name>
            <remote-type>129</remote-type>
            <local-name>[continent]</local-name>
            <parent-name>[continent_max_deathcount.csv]</parent-name>
            <remote-alias>continent</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>max_Totaldeath_count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[max_Totaldeath_count]</local-name>
            <parent-name>[continent_max_deathcount.csv]</parent-name>
            <remote-alias>max_Totaldeath_count</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Continent' datatype='string' name='[continent]' role='dimension' type='nominal' />
      <column caption='max Totaldeath count' datatype='integer' name='[max_Totaldeath_count]' role='measure' type='quantitative' />
      <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.477273' measure-ordering='alphabetic' measure-percentage='0.522727' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:continent:nk]' palette='orange_gold_10_0' type='palette'>
            <map to='#9e3a26'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#c54923'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#e2621f'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#f3852a'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#f4d166'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#f8aa4c'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='global_toal_case_death_deathrate' inline='true' name='federated.08k3c2415330ps0zv57qw0d7kiox' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='global_toal_case_death_deathrate' name='textscan.03yfuqy1v7s1yw1gnayum0a9e48v'>
            <connection class='textscan' directory='C:/Users/kano/Desktop/PortfolioPorject/Tableau' filename='global_toal_case_death_deathrate.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.03yfuqy1v7s1yw1gnayum0a9e48v' name='global_toal_case_death_deathrate.csv' table='[global_toal_case_death_deathrate#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='total_cases' ordinal='0' />
            <column datatype='integer' name='total_deaths' ordinal='1' />
            <column datatype='real' name='death_rate_pct' ordinal='2' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[global_toal_case_death_deathrate.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[global_toal_case_death_deathrate.csv]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[global_toal_case_death_deathrate.csv]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>death_rate_pct</remote-name>
            <remote-type>5</remote-type>
            <local-name>[death_rate_pct]</local-name>
            <parent-name>[global_toal_case_death_deathrate.csv]</parent-name>
            <remote-alias>death_rate_pct</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Death Rate Pct' datatype='real' name='[death_rate_pct]' role='measure' type='quantitative' />
      <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.410839' measure-ordering='alphabetic' measure-percentage='0.589161' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='global_infectedrate_by_day' inline='true' name='federated.1qkn8i911i7dub1deh02511rgcvd' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='global_infectedrate_by_day' name='textscan.0sjvc1817bazdt10h4mkh0r1fsbk'>
            <connection class='textscan' directory='C:/Users/kano/Desktop/PortfolioPorject/Tableau' filename='global_infectedrate_by_day.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0sjvc1817bazdt10h4mkh0r1fsbk' name='global_infectedrate_by_day.csv' table='[global_infectedrate_by_day#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='datetime' name='date' ordinal='1' />
            <column datatype='integer' name='total_cases' ordinal='2' />
            <column datatype='integer' name='population' ordinal='3' />
            <column datatype='real' name='infected_rate_pct' ordinal='4' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[global_infectedrate_by_day.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[global_infectedrate_by_day.csv]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>135</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[global_infectedrate_by_day.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>1</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[global_infectedrate_by_day.csv]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[global_infectedrate_by_day.csv]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>infected_rate_pct</remote-name>
            <remote-type>5</remote-type>
            <local-name>[infected_rate_pct]</local-name>
            <parent-name>[global_infectedrate_by_day.csv]</parent-name>
            <remote-alias>infected_rate_pct</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Location]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Date' datatype='datetime' name='[date]' role='dimension' type='ordinal' />
      <column caption='Infected Rate Pct' datatype='real' name='[infected_rate_pct]' role='measure' type='quantitative' />
      <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
      <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.454545' measure-ordering='alphabetic' measure-percentage='0.545455' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Location:nk]' palette='summer_10_0' type='palette'>
            <map to='#00a2b3'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Niue&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bonaire Sint Eustatius and Saba&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;North Korea&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Tokelau&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Saint Pierre and Miquelon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;United States Virgin Islands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Western Sahara&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Northern Cyprus&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pitcairn&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
    </datasource>
    <datasource caption='global_vacc' inline='true' name='federated.1qvx8960l4iq1t165kwzq0t6glcb' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='global_vacc' name='textscan.0z3j7z012seis811f3cji1ntrdkh'>
            <connection class='textscan' directory='C:/Users/kano/Desktop/PortfolioPorject/Tableau' filename='global_vacc.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0z3j7z012seis811f3cji1ntrdkh' name='global_vacc.csv' table='[global_vacc#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='population' ordinal='1' />
            <column datatype='integer' name='MAX(RollingPeoVac)' ordinal='2' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[global_vacc.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>129</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[global_vacc.csv]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[global_vacc.csv]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MAX(RollingPeoVac)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[MAX(RollingPeoVac)]</local-name>
            <parent-name>[global_vacc.csv]</parent-name>
            <remote-alias>MAX(RollingPeoVac)</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='PctOfVac' datatype='real' name='[Calculation_1414693273776177152]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[MAX(RollingPeoVac)]/[population]' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='None' caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.452381' measure-ordering='alphabetic' measure-percentage='0.547619' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Continent' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#000000'>Overall Death Rate Percentage</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='global_toal_case_death_deathrate' name='federated.08k3c2415330ps0zv57qw0d7kiox' />
          </datasources>
          <datasource-dependencies datasource='federated.08k3c2415330ps0zv57qw0d7kiox'>
            <column caption='Death Rate Pct' datatype='real' name='[death_rate_pct]' role='measure' type='quantitative' />
            <column-instance column='[death_rate_pct]' derivation='Sum' name='[sum:death_rate_pct:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
            <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.08k3c2415330ps0zv57qw0d7kiox].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.08k3c2415330ps0zv57qw0d7kiox].[sum:death_rate_pct:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.08k3c2415330ps0zv57qw0d7kiox].[sum:total_cases:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.08k3c2415330ps0zv57qw0d7kiox].[sum:total_deaths:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.08k3c2415330ps0zv57qw0d7kiox].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.08k3c2415330ps0zv57qw0d7kiox].[sum:total_cases:qk]&quot;</bucket>
              <bucket>&quot;[federated.08k3c2415330ps0zv57qw0d7kiox].[sum:total_deaths:qk]&quot;</bucket>
              <bucket>&quot;[federated.08k3c2415330ps0zv57qw0d7kiox].[sum:death_rate_pct:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.08k3c2415330ps0zv57qw0d7kiox].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.08k3c2415330ps0zv57qw0d7kiox].[:Measure Names]' value='134' />
            <format attr='height' value='42' />
            <format attr='text-format' field='[federated.08k3c2415330ps0zv57qw0d7kiox].[sum:death_rate_pct:qk]' value='n#,##0.000;-#,##0.000' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' value='#d4d4d4' />
            <format attr='background-color' scope='rows' value='#f5f5f5' />
            <format attr='background-color' scope='cols' value='#ffaa7f' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' value='#f5ead7' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='5' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-color' value='#ffffff' />
            <format attr='stroke-size' value='3' />
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='solid' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.08k3c2415330ps0zv57qw0d7kiox].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='2' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.08k3c2415330ps0zv57qw0d7kiox].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{1B416989-4451-4B41-94D8-15B7A07ED7DD}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Total Death Count By Continents</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='continent_max_deathcount' name='federated.0c07w181arxfub14bj2df0mgv5dr' />
          </datasources>
          <datasource-dependencies datasource='federated.0c07w181arxfub14bj2df0mgv5dr'>
            <column caption='Continent' datatype='string' name='[continent]' role='dimension' type='nominal' />
            <column caption='max Totaldeath count' datatype='integer' name='[max_Totaldeath_count]' role='measure' type='quantitative' />
            <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[max_Totaldeath_count]' derivation='Sum' name='[sum:max_Totaldeath_count:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.0c07w181arxfub14bj2df0mgv5dr].[none:continent:nk]' direction='ASC' using='[federated.0c07w181arxfub14bj2df0mgv5dr].[sum:max_Totaldeath_count:qk]' />
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0c07w181arxfub14bj2df0mgv5dr].[none:continent:nk]' value='100' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0c07w181arxfub14bj2df0mgv5dr].[none:continent:nk]' />
              <text column='[federated.0c07w181arxfub14bj2df0mgv5dr].[sum:max_Totaldeath_count:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.2743645906448364' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0c07w181arxfub14bj2df0mgv5dr].[sum:max_Totaldeath_count:qk]</rows>
        <cols>[federated.0c07w181arxfub14bj2df0mgv5dr].[none:continent:nk]</cols>
      </table>
      <simple-id uuid='{008851DE-8E47-4C59-BD8A-EF7ABF84F09A}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Infected Rate By Countries</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='global_max_caseandinfectrate' name='federated.0mrr9ae1ksdrg21fq4izx0yoe8v3' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0mrr9ae1ksdrg21fq4izx0yoe8v3'>
            <column aggregation='None' datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Max Infected Rate Pct' datatype='real' name='[max_infected_rate_pct]' role='measure' type='quantitative' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[max_infected_rate_pct]' derivation='Sum' name='[sum:max_infected_rate_pct:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0mrr9ae1ksdrg21fq4izx0yoe8v3].[Longitude (generated)]' field-type='quantitative' max='-6870849.3511828259' min='-34646977.703196049' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0mrr9ae1ksdrg21fq4izx0yoe8v3].[Latitude (generated)]' field-type='quantitative' max='14722456.977304831' min='-4842885.6685165251' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0mrr9ae1ksdrg21fq4izx0yoe8v3].[sum:max_infected_rate_pct:qk]' palette='orange_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0mrr9ae1ksdrg21fq4izx0yoe8v3].[sum:max_infected_rate_pct:qk]' value='Percentage of Population Infected'>
              <formatted-text>
                <run>Percentage of Population Infected</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='light' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0mrr9ae1ksdrg21fq4izx0yoe8v3].[sum:max_infected_rate_pct:qk]' />
              <text column='[federated.0mrr9ae1ksdrg21fq4izx0yoe8v3].[none:Location:nk]' />
              <geometry column='[federated.0mrr9ae1ksdrg21fq4izx0yoe8v3].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='0.0099999997764825821' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0mrr9ae1ksdrg21fq4izx0yoe8v3].[Latitude (generated)]</rows>
        <cols>[federated.0mrr9ae1ksdrg21fq4izx0yoe8v3].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{0219DD24-0938-496B-A50D-4A6E94183D0B}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Specific Countries Infected Rate With Prediction</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='global_infectedrate_by_day' name='federated.1qkn8i911i7dub1deh02511rgcvd' />
          </datasources>
          <datasource-dependencies datasource='federated.1qkn8i911i7dub1deh02511rgcvd'>
            <column datatype='string' name='[Location]' role='dimension' type='nominal' />
            <column-instance column='[infected_rate_pct]' derivation='Avg' name='[avg:infected_rate_pct:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='datetime' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[infected_rate_pct]' derivation='Avg' forecast-column-base='[avg:infected_rate_pct:qk]' forecast-column-type='forecast-value' name='[fVal:avg:infected_rate_pct:qk]' pivot='key' type='quantitative' />
            <column caption='Infected Rate Pct' datatype='real' name='[infected_rate_pct]' role='measure' type='quantitative' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1qkn8i911i7dub1deh02511rgcvd].[none:Location:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Canada&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Germany&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Mexico&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Singapore&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1qkn8i911i7dub1deh02511rgcvd].[none:date:qk]' included-values='in-range'>
            <min>#2020-01-01 00:00:00#</min>
            <max>#2021-10-14 23:59:59#</max>
          </filter>
          <slices>
            <column>[federated.1qkn8i911i7dub1deh02511rgcvd].[none:Location:nk]</column>
            <column>[federated.1qkn8i911i7dub1deh02511rgcvd].[none:date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1qkn8i911i7dub1deh02511rgcvd].[none:Location:nk]' />
              <text column='[federated.1qkn8i911i7dub1deh02511rgcvd].[none:Location:nk]' />
              <text column='[federated.1qkn8i911i7dub1deh02511rgcvd].[fVal:avg:infected_rate_pct:qk]' />
              <color column='[federated.1qkn8i911i7dub1deh02511rgcvd].[none:Forecast Indicator:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='0.80160218477249146' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1qkn8i911i7dub1deh02511rgcvd].[fVal:avg:infected_rate_pct:qk]</rows>
        <cols>[federated.1qkn8i911i7dub1deh02511rgcvd].[tmn:date:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{0B2B5EFF-1AA4-4969-9E63-650EAE69F888}' />
    </worksheet>
    <worksheet name='Sheet 5'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Global Vaccination Counts</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='global_vacc' name='federated.1qvx8960l4iq1t165kwzq0t6glcb' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1qvx8960l4iq1t165kwzq0t6glcb'>
            <column datatype='integer' name='[MAX(RollingPeoVac)]' role='measure' type='quantitative' />
            <column aggregation='None' caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[MAX(RollingPeoVac)]' derivation='Sum' name='[sum:MAX(RollingPeoVac):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1qvx8960l4iq1t165kwzq0t6glcb].[sum:MAX(RollingPeoVac):qk]' palette='green_10_0' type='interpolated' />
            <encoding attr='size' field='[federated.1qvx8960l4iq1t165kwzq0t6glcb].[sum:MAX(RollingPeoVac):qk]' field-type='quantitative' max-size='1' min-size='0' type='quantsize' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1qvx8960l4iq1t165kwzq0t6glcb].[sum:MAX(RollingPeoVac):qk]' />
              <size column='[federated.1qvx8960l4iq1t165kwzq0t6glcb].[sum:MAX(RollingPeoVac):qk]' />
              <text column='[federated.1qvx8960l4iq1t165kwzq0t6glcb].[none:location:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='3.6118373870849609' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1qvx8960l4iq1t165kwzq0t6glcb].[Latitude (generated)]</rows>
        <cols>[federated.1qvx8960l4iq1t165kwzq0t6glcb].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{482A4D77-C584-431D-A4CD-A7522C6779AB}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='global_infectedrate_by_day' name='federated.1qkn8i911i7dub1deh02511rgcvd' />
      </datasources>
      <datasource-dependencies datasource='federated.1qkn8i911i7dub1deh02511rgcvd'>
        <column caption='Date' datatype='datetime' name='[date]' role='dimension' type='ordinal' />
        <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98142' id='7' param='horz' type='layout-flow' w='99034' x='483' y='929'>
            <zone h='98142' id='5' type='layout-basic' w='99034' x='483' y='929'>
              <zone h='49071' id='3' name='Sheet 3' w='54375' x='34762' y='929'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49071' id='9' name='Sheet 5' w='39137' x='50000' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='34321' id='12' name='Sheet 2' w='24759' x='483' y='15679'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49071' id='14' name='Sheet 4' w='38817' x='483' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='14750' id='17' name='Sheet 1' w='34279' x='483' y='929'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49129' id='8' name='Sheet 3' pane-specification-id='0' param='[federated.0mrr9ae1ksdrg21fq4izx0yoe8v3].[sum:max_infected_rate_pct:qk]' type='color' w='10380' x='89137' y='929'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='20209' id='10' name='Sheet 5' pane-specification-id='0' param='[federated.1qvx8960l4iq1t165kwzq0t6glcb].[sum:MAX(RollingPeoVac):qk]' type='size' w='10380' x='89137' y='50058'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='28804' id='11' name='Sheet 5' pane-specification-id='0' param='[federated.1qvx8960l4iq1t165kwzq0t6glcb].[sum:MAX(RollingPeoVac):qk]' type='color' w='10380' x='89137' y='70267'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='40360' id='16' name='Sheet 4' pane-specification-id='0' param='[federated.1qkn8i911i7dub1deh02511rgcvd].[none:Location:nk]&#10;[federated.1qkn8i911i7dub1deh02511rgcvd].[none:Forecast Indicator:nk]' type='color' w='10700' x='39300' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='8711' id='15' name='Sheet 4' param='[federated.1qkn8i911i7dub1deh02511rgcvd].[none:date:qk]' show-domain='false' show-null-ctrls='false' type='filter' w='10700' x='39300' y='90360'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone fixed-size='160' h='34321' id='6' is-fixed='true' param='vert' type='layout-flow' w='9520' x='25242' y='15679'>
                <zone h='18118' id='13' name='Sheet 2' pane-specification-id='0' param='[federated.0c07w181arxfub14bj2df0mgv5dr].[none:continent:nk]' type='color' w='9520' x='25242' y='15679'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1700' minheight='1700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='21' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98142' id='20' param='vert' type='layout-flow' w='99034' x='483' y='929'>
                <zone fixed-size='110' h='14750' id='17' is-fixed='true' name='Sheet 1' w='34279' x='483' y='929'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49071' id='3' is-fixed='true' name='Sheet 3' w='54375' x='34762' y='929'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='49129' id='8' name='Sheet 3' pane-specification-id='0' param='[federated.0mrr9ae1ksdrg21fq4izx0yoe8v3].[sum:max_infected_rate_pct:qk]' type='color' w='10380' x='89137' y='929'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='267' h='34321' id='12' is-fixed='true' name='Sheet 2' w='24759' x='483' y='15679'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='18118' id='13' name='Sheet 2' pane-specification-id='0' param='[federated.0c07w181arxfub14bj2df0mgv5dr].[none:continent:nk]' type='color' w='9520' x='25242' y='15679'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8711' id='15' name='Sheet 4' param='[federated.1qkn8i911i7dub1deh02511rgcvd].[none:date:qk]' show-domain='false' show-null-ctrls='false' type='filter' w='10700' x='39300' y='90360'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49071' id='14' is-fixed='true' name='Sheet 4' w='38817' x='483' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='40360' id='16' name='Sheet 4' pane-specification-id='0' param='[federated.1qkn8i911i7dub1deh02511rgcvd].[none:Location:nk]&#10;[federated.1qkn8i911i7dub1deh02511rgcvd].[none:Forecast Indicator:nk]' type='color' w='10700' x='39300' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49071' id='9' is-fixed='true' name='Sheet 5' w='39137' x='50000' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='20209' id='10' name='Sheet 5' pane-specification-id='0' param='[federated.1qvx8960l4iq1t165kwzq0t6glcb].[sum:MAX(RollingPeoVac):qk]' type='size' w='10380' x='89137' y='50058'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='28804' id='11' name='Sheet 5' pane-specification-id='0' param='[federated.1qvx8960l4iq1t165kwzq0t6glcb].[sum:MAX(RollingPeoVac):qk]' type='color' w='10380' x='89137' y='70267'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{68056418-B101-4E96-9D46-796F191E65B4}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='219'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.08k3c2415330ps0zv57qw0d7kiox].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E87D7218-94D1-43C0-9ABB-F49929A41D9B}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='136'>
            <card pane-specification-id='0' param='[federated.0c07w181arxfub14bj2df0mgv5dr].[none:continent:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0c07w181arxfub14bj2df0mgv5dr].[none:continent:nk]</field>
            <field>[federated.0k3u3bv0yxrrvn19i1yq70ryitv1].[none:Location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B77CC2FF-BBB1-416D-8604-4F2FB4F2E636}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0mrr9ae1ksdrg21fq4izx0yoe8v3].[sum:max_infected_rate_pct:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0mrr9ae1ksdrg21fq4izx0yoe8v3].[none:Location:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{820EE614-EF81-4956-BA29-DA22A6A37C78}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card size='20' type='pages' />
            <card size='51' type='filters' />
            <card size='185' type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='152'>
            <card param='[federated.1qkn8i911i7dub1deh02511rgcvd].[none:date:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.1qkn8i911i7dub1deh02511rgcvd].[none:Location:nk]&#10;[federated.1qkn8i911i7dub1deh02511rgcvd].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1qkn8i911i7dub1deh02511rgcvd].[my:date:ok]</field>
            <field>[federated.1qkn8i911i7dub1deh02511rgcvd].[none:Forecast Indicator:nk]</field>
            <field>[federated.1qkn8i911i7dub1deh02511rgcvd].[none:Location:nk]</field>
            <field>[federated.1qkn8i911i7dub1deh02511rgcvd].[none:date:qk]</field>
            <field>[federated.1qkn8i911i7dub1deh02511rgcvd].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1133275C-C66B-434E-85C0-E3F91DAA7EFE}' />
    </window>
    <window class='worksheet' name='Sheet 5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1qvx8960l4iq1t165kwzq0t6glcb].[sum:MAX(RollingPeoVac):qk]' type='size' />
            <card pane-specification-id='0' param='[federated.1qvx8960l4iq1t165kwzq0t6glcb].[sum:MAX(RollingPeoVac):qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0k3u3bv0yxrrvn19i1yq70ryitv1].[none:Location:nk]</field>
            <field>[federated.1mfn69p1jze51215s7xqh1qsgnyg].[yr:date:ok]</field>
            <field>[federated.1qvx8960l4iq1t165kwzq0t6glcb].[none:location:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{B1B5E580-D888-4275-8D21-1E21DB79111E}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 1' />
        <viewpoint name='Sheet 2'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 3'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 4'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 5'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{FCE3655A-362A-4497-902D-334B1D5B11D1}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='66' name='Sheet 1' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 5' width='192'>
      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
      QmCC
    </thumbnail>
  </thumbnails>
</workbook>
